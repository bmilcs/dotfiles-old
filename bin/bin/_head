#!/bin/bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#────────────────────────────────────────────────────────────
#   global shell/script/function stuff
#────────────────────────────────────────────────────────────

# TODO: CLEAN UP PARAMETER : \& \: \= \|

#
# COLORS
#

NC='\033[0m'
B='\033[1m'
DIM='\033[2m'
ITAL='\033[3m'
UL='\033[4m'
BLINK='\033[5m'
INV='\033[7m'
BLK=${NC}'\033[30m'
RED=${NC}'\033[31m'
GRN=${NC}'\033[32m'
YLW=${NC}'\033[33m'
BLU=${NC}'\033[34m'
PUR=${NC}'\033[35m'
CYN=${NC}'\033[36m'
WHT=${NC}'\033[37m'
TIME="$(date +"%I:%M %P")"
DATE="$(date +"%Y-%m-%d")"

#
# PROMPTS
#

_ask() {
  local prompt default reply
  if [[ ${2:-} = 'Y' ]]; then
    prompt='Y/n'
    default='Y'
  elif [[ ${2:-} = 'N' ]]; then
    prompt='y/N'
    default='N'
  else
    prompt='y/n'
    default=''
  fi
  while true; do
    # ask the question (not using "read -p" as it uses stderr not stdout)
    _q "$1 ${YLW}${B}[$prompt]${NC} "
    # read the answer (use /dev/tty in case stdin is redirected from somewhere else)
    read -r reply </dev/tty
    # default?
    if [[ -z $reply ]]; then
        reply=$default
    fi
    # check if the reply is valid
    case "$reply" in
      Y*|y*) return 0 ;;
      N*|n*) return 1 ;;
    esac
  done
  }

#
# OUTPUT
#

# TODO  parse parameters for illegal symbol &
# msg=${echo $*| sed -e 's/\&/\\\&/g'}
# echo $msg

# title
function _t() {
  echo -e "\n${CYN}${B}$* ${CYN}${NC}\n"
  }

# announce
function _a() {
  echo -e "\n${BLU}${B}[${BLU} $* ${BLU}${B}]${NC}\n"
  }

# question
function _q() {
  echo -e "${CYN}${B}>>> $* "
  }

# output
function _o() {
  echo -e "    ${WHT}${B}> ${WHT} $* ${NC}"
  }

# inform
function _i() {
  echo -e "    ${WHT}[${B}i${WHT}] $* ${NC}\n"
  }

# warn
function _w() {
  echo -e "    ${YLW}[!] $* ${NC}\n"
  }
function _w2() {
  echo -e "    ${YLW}[!] $* ${NC}"
  }

# success
function _s() {
  if [ $# -eq 0 ] ; then 
    echo -e "    ${GRN}[√] success${NC}\n"
  else 
    echo -e "    ${GRN}[√] $* ${NC}\n"
  fi 
  }

# error
function _e() {
  if [ $# -eq 0 ] ; then
    echo -e "${RED}    [X]${RED}${B} error${NC}\n"
  else
    echo -e "${RED}    [X]${RED}${B} ${NC}${RED}$*\n"
  fi
  }

