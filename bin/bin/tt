#───────────────────────────────────  extract commands from vim manual  ───────
file=~/vimwiki
sed -i '/Remap command/!d' $file

#──────────────────────────────────────────────────────────  substring  ───────
#!/usr/bin/env bash
#
#b="2	/usr/share/icons/Papirus/24x24/actions"
#substr='@"^[\w\-. ]+$";'
#substr='.*[\w]'
#
#expr match "$b" '.*\([\w]*\).*'
#
#echo ha
#
#set +x
#────────────────────────────────────────────────────────────────  vol  ───────
# changeVolume

# # Arbitrary but unique message id
# msgId="991049"
# 
# # Change the volume using alsa(might differ if you use pulseaudio)
# amixer -c 0 set Master "$@" > /dev/null
# 
# # Query amixer for the current volume and whether or not the speaker is muted
# volume="$(amixer -c 0 get Master | tail -1 | awk '{print $4}' | sed 's/[^0-9]*//g')"
# mute="$(amixer -c 0 get Master | tail -1 | awk '{print $6}' | sed 's/[^a-z]*//g')"
# if [[ $volume == 0 || "$mute" == "off" ]]; then
#     # Show the sound muted notification
#     dunstify -a "changeVolume" -u low -i audio-volume-muted -r "$msgId" "Volume muted" 
# else
#     # Show the volume notification
#     dunstify -a "changeVolume" -u low -i audio-volume-high -r "$msgId" \
#     -h int:value:"$volume" "Volume: ${volume}%"
# fi
# 
# # Play the volume changed sound
# canberra-gtk-play -i audio-volume-change -d "changeVolume"

#─────────────────────────────────────────  pacman filesystem fix loop  ───────
#while read var; do
#  sudo pacman -S --noconfirm --overwrite "*" "$var"
#done <~/yay_short

#──────────────────────────────  pacman acquire permission package fix  ───────
#paclist=/tmp/pacman_fix
#rm "$paclist"
#up &> "$paclist"
#sed -i '/exists in filesystem/!d' "$paclist"
#sed -i 's/\: \/.*//g' "$paclist"
##awk '!seen[$0]++' "$paclist"
#awk '!seen[$0]++' "$paclist" > "$paclist".final
#cat "$paclist".final
