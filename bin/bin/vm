#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#                 DIRECT BIN EDITOR [./vm]
#────────────────────────────────────────────────────────────
source _bm
source ~/.profile
unset bp

# no argument, launch nvim
if [ $# -eq 0 ]; then
  
  _a "direct bin editor"
  _o "target: ${YLW}<empty>\n"
  _f "launching neovim $PWD"
  _s all set\\n
  ( nvim . )
  exit 0

# multiple arguments, skip
elif [ $# -gt 1 ]; then

  _a "direct bin editor"
  _o "target: ${RED}$*\n"
  _w "multiple arguments detected"
  _e "unable to process input\n"

# safe to proceed
else

  vmlog=/tmp/bm-vm
  bp=$(which "$1" 2> $vmlog)

  # which command produce output?
  if [[ -n "$bp" ]]; then 

    # output: is file writeable?
    if [[ -w "$bp" ]]; then
      command nvim "$bp" 

    # output, not writeable: is it even a file?
    elif [[ -e "$bp" ]]; then

      # file exists, inside /usr/bin?
      if [[ "$bp" == "/usr/bin"* ]]; then
        _a "direct bin editor"
        _o "target:   ${GRN}$1"
        _o "path: ${RED}$bp"
        _or "$(bat $vmlog)"
        exit 1
      else
        # exists, not inside /usr/bin
        sudo nvim "$bp"
      fi
    # output is not a file:
    else 
      _a "direct bin editor"
      _o "target: ${GRN}$1"
      _o "path:   ${RED}$bp"
      _w possible alias/function
      _or "$(bat /tmp/bm_bin_vm)"
    fi
  # command doesn't exist
  else
      _a "direct bin editor"
      _o "target: ${GRN}$1"
      _o "path: ${RED}???\n"
      _e "$1: doesn't appear to be a command\n"
  fi  
fi
