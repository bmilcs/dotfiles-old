#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#────────────────────────────────────────────────────────────
#   REPO UPDATER              
#────────────────────────────────────────────────────────────
# TODO
#   automate git-based software updates
#────────────────────────────────────────────────────────────
source _head
_t mass repo update

exceptions=("nerd-fonts-2.0.0" "x")

rm -rf /tmp/{upno,upyes}

chkout(){
  $1 | \
    tee >(sleep 1; [[ $(tail -n1) =~ 'Already up to date' ]] && echo "$(pwd)" >> /tmp/upno || echo "$(pwd)" >> /tmp/upyes )
  }

updaterepo() {
  # loop through dir
  for dir in */; do

    _a updating $dir

    match=0

    # if looped dir from above = an exception, match!
    for a in "${exceptions[@]}"; do
      [[ $dir == */$a/ ]] && match=1
    done

    # if match is found, skip this iteration
    [[ "$match" == 1 ]] && continue

    cd $(pwd)/$dir
    chkout "git pull"
    _s
    cd ..
  done
  }

[ -d ~/gits ] && cd ~/gits && updaterepo || [ -d ~/repos ] && cd ~/repos && updaterepo 

_s updated and/or issues present
[ -f /tmp/upyes ] && cat /tmp/upyes || _o no updates available

_a no update needed
[ -f /tmp/upno ] && cat /tmp/upno || _o everything was out of date

