#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#                 UPDATE DOTFILES TEST [./updf]
#────────────────────────────────────────────────────────────

source _bm
_a local: dotfiles

D="${D:-/home/bmilcs/bm}"
g="git --git-dir=$D/.git --work-tree=$D"

gstatus="$($g status | grep "clean")"
gremote="$($g remote update 2> /dev/null)"

if [[ ! -z "$gstatus" ]] ; then

  _f clean

  _a remote dotfiles 
  gstatus=$($g status -uno 2> /dev/null)

  if [[ "$gstatus" == *"ahead"* ]]; then

    _a "pushing updates (ahead)"
    $g push \

  elif [[ "$gstatus" == *"behind"* ]]; then

    _a "pulling updates (behind)"
    $g pull \

  else
    _s "up-to-date"
  fi

elif [[ $gstatus == *"diverged"* ]]; then

  _e "repo has ${B}diverged!"
  _ay rebase required

else

  _wb "dirty!"
  _ay "commit:"
  $g status -s

fi

echo
_s done "\n"
