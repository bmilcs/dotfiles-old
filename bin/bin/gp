#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#                 UPDATE DOTFILES TEST [./updf]
#────────────────────────────────────────────────────────────

source _bm
_t dotfile repo helper

D="${D:-/home/bmilcs/bm}"
g="git --git-dir=$D/.git --work-tree=$D"
clean="$($g status | grep "clean")"

_a local repo
_o health check

if [[ ! -z "$clean" ]] ; then
  _s clean: no action necessary

  _a remote repo
  _o "diff local & upstream dotfiles"
  $g remote update > /dev/null 2>&1

  if [[ "$($g status -uno)" == *"ahead"* ]]; then
    _w "ahead of origin/main"
    _a pushing changes
    _o updating remote dotfiles repo "\n"
   $g push \
    && echo && _s

  elif [[ "$($g status -uno)" == *"behind"* ]]; then
    _w "behind origin/main"
    _a "git pull"
    _o "updating local dotfiles \n"
   $g pull \
    && echo && _s
  else
    _s "up-to-date": no action necessary
  fi
else
  _wb "dirty: unable to proceed"
  _ay "commit:"
  $g status -s
  echo
  _s done "\n"
fi
