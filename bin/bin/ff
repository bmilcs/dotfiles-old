#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#              FOLDER FZF > NVIM [./cn]
#
# TODO
# add -h options, with print-outs, based on case statement
#────────────────────────────────────────────────────────────
source _bm

unset s
unset p
unset c
unset f

# definitions
case $1 in

  a ) p="$D/opt/alacritty";; aa) c="$D/opt/alacritty";;
  b ) p="$D/bin";; bb ) c="$D/bin" ;;
  d ) p=~/.config/dunst;; dd) c=~/.config/dunst ;;
  i ) p="$D/opt/i3/.config/i3";; ii) c="$D/opt/i3/.config/i3";;
  p ) p="$D/opt/polybar/.config/polybar";; pp) c="$D/opt/polybar/.config/polybar/";;
  r ) p="$D/opt/rofi";; rr) c="$D/opt/rofi/.config/rofi/" ;;
  s ) p="$D/vim/.config/nvim/snips";; ss) c="$D/vim/.config/nvim/snips";;
  t ) p=~/txt;; tt) c=~/txt ;;
  u ) s="/usr/local/bin";; uu) c="/usr/local/bin" ;;
  v ) p="$D/vim";; vv) c="$D/vim";;
  z ) p="$D/zsh";; zz) c="$D/zsh";;
  x ) s="$D/opt/xorg";; xx) c="$D/opt/xorg" ;;
  n ) p="$D/opt/ncmpcpp";; nn ) c="$D/opt/ncmpcpp";;
  tm ) f="$D/opt/tmux/.tmux.conf" ;;
  # e) nvim "$D"/bin/bin/cfg ;;
  # tm | tmux) nvim "$D"/opt/tmux/.tmux.conf ;;
  # e) nvim "$D"/bin/bin/cfg ;;
  # #xterm)    vim ~/.Xresources.d/xterm;;
  # k) nvim "$D"/opt/sxhkd/.config/sxhkd/sxhkdrc ;;
  # bsp) nvim "$D"/opt/bspwm/.config/bspwm/bspwmrc ;;

  e ) _e no input found 
      nvim $(which ff)
      exit 1
      ;;
  * ) _a ff options
    _o ${B} a  ${NC}
    _o ${B} b  ${NC}
    _o ${B} d  ${NC}
    _o ${B} i  ${NC}
    _o ${B} p  ${NC}
    _o ${B} r  ${NC}
    _o ${B} s  ${NC}
    _o ${B} t  ${NC}
    _o ${B} u  ${NC}
    _o ${B} v  ${NC}
    _o ${B} z  ${NC}
    _o ${B} x  ${NC}
    _o ${B} n  ${NC}
    _o ${B} tm ${NC}
    ;;
esac

if [ -n "$p" ]; then
  _o edit: \'"$p"\'
  fd -uu -tf -tl . "$p"\
    | sort \
    | fzf --preview 'bat --color "always" {}' --delimiter / --with-nth -1 --multi \
    | xargs -I bm nvim bm
elif [ -n "$s" ]; then
  _o sudo edit: \'"$p"\'
  fd -uu -tf -tl . "$p"\
    | sort \
    | fzf --preview 'bat --color "always" {}' --delimiter / --with-nth -1 --multi \
    | xargs -I bm sudo nvim bm
elif [ -n "$c" ]; then
  _o cd \'"$c"\'
  cd $c || _e "$c doesn't exist"
  $SHELL
elif [ -n "$f" ]; then
  _o nvim \'"$c"\'
  nvim "$f" || _e "$f doesn't exist"
else
  _w "ff ${B}$1${YLW} not found"
  exit 1
fi
