#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#                 UPDATE DOTFILES TEST [./updf]
#────────────────────────────────────────────────────────────

source _head
_t dotfiles 

#────────────────────────────────────────────────────────────
# PULL DOTFILE UPDATES IF CLEAN GS
#────────────────────────────────────────────────────────────

D="${D:-/home/bmilcs/bm}"
g="git --git-dir="$D"/.git"
clean="$(git --git-dir="$D"/.git status | grep "clean")"


_a local dotfiles
_i checking for changes


if [[ ! -z "$clean" ]] ;
then

  _s clean repo
  _a universal update check

  $g remote update # hide this afterward

  if [[ "$($g status -uno)" == *"ahead"* ]]; then
    _w "ahead of origin/main"
    _a pushing changes
    _o updating remote dotfiles repo
    $g push 
  elif [[ "$($g status -uno)" == *"behind"* ]]; then
    _w "behind origin/main"
    _a git pull
    _o updating local dotfiles
    $g pull
  else
    _i "up-to-date": no changes needed
  fi
else
  _e unclean: add \& commit local changes
fi
