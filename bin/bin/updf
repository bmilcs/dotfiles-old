#!/usr/bin/env bash
#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ▐█ ▀█▪·██ ▐███▪██ ██•  ▐█ ▌▪▐█ ▀.   ╔╦╗╔═╗╔╦╗╔═╗╦╦  ╔═╗╔═╗
#  ▐█▀▀█▄▐█ ▌▐▌▐█·▐█·██ ▪ ██ ▄▄▄▀▀▀█▄   ║║║ ║ ║ ╠╣ ║║  ║╣ ╚═╗
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#                 UPDATE DOTFILES TEST [./updf]
#────────────────────────────────────────────────────────────

source _head
_t  

#────────────────────────────────────────────────────────────
# PULL DOTFILE UPDATES IF CLEAN GS
#────────────────────────────────────────────────────────────

_t dotfile repo

clean="$(git --git-dir="$D"/.git status | grep "clean")"
echo $clean


git remote update
if [[ "$(git status -uno)" == *"ahead"* ]]; then
  echo "ahead"
elif [[ "$(git status -uno)" == *"behind"* ]]; then
  echo "behind"
else
  echo "up-to-date"
fi


  exit 1


if [[ ! -z "$clean" ]] ;
then
  _a git status
  _o clean repo: checking for updates
  git --git-dir="$D"/.git pull && _s || _e git pull: something went wrong
else
  _w unclean: skipping sync 
  _o commit changes \& manually git pull
fi
