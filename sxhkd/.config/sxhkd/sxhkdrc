#  ▄▄▄▄· • ▌ ▄ ·. ▪  ▄▄▌   ▄▄· .▄▄ ·   ──────────────────────
#  ██▄▪▐███ ██▌▐█▌▐█▌▐█▌ ▄▐███▌▐█▄▪▐█  ═╩╝╚═╝ ╩ ╚  ╩╩═╝╚═╝╚═╝
#  ·▀▀▀▀ ▀▀  █▪▀▀▀▀▀▀.▀▀▀ ·▀▀▀  ▀▀▀▀   https://dot.bmilcs.com
#────────────────────────────────────────────────────────────
#   sxhkdrc              
#────────────────────────────────────────────────────────────

#	[bspwm] restart
super + grave
	pkill -USR1 -x sxhkd; . ~/.config/polybar/launch.sh;	xrdb -merge ~/.Xresources; bspc wm -r

# [bspwm] quit
super + alt + grave
	bspc quit

# [sxhkd] restart 
super + ctrl + grave
	pkill -USR1 -x sxhkd 

# [xresources] reload
super + ctrl + grave
	xrdb -merge ~/.Xresources

#────────────────────────────────────────────────────────────
# WINDOW MANAGEMENT
# 

# [windows]  close & kill
super + {_,ctrl + }w
	bspc node -{c,k}

# [desktops] alternate between the tiled and monocle layout
super + m
	bspc desktop -l next 

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local 

super + s
	bspc node -s biggest.window # swap the current node and the biggest window

super + q
	bspc node -t {pseudo_tiled,floating,fullscreen,tiled}

# set the window state
super + {shift + ,_,ctrl + ,shift + ctrl + }f
	bspc node -t {\~tiled,\~pseudo_tiled,\~floating,\~fullscreen} 

# adjust gap size
super + alt + ctrl + {j,k}
	bspc config -n focused window_gap $(($(bspc config -n focused window_gap) {-,+} 3))

# adjust gap size
super + alt + ctrl + {h,l}
	bspc config -n focused padding $(($(bspc config -n focused padding) {-,+} 3))

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private} 

# focus the node in the given direction
super + {_,ctrl + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east} 

# move a floating window
super + shift + {h,j,k,l}
	bspc node -v {-30 0,0 30,0 -30,30 0} 

# increase window size
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# reduce window size
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# resize floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# expand a window by moving one of its side outward | RESIZE
#super + alt + {h,j,k,l}
#	bspc node -z {left -30 0,bottom 0 30,top 0 -30,right 30 0} 

# contract a window by moving one of its side inward | RESIZE
#super + alt + shift + {h,j,k,l}
#	bspc node -z {right -30 0,top 0 30,bottom 0 -30,left 30 0} 

# preselect the direction
super + ctrl + shift + {h,j,k,l}
	bspc node -p {west,south,north,east} 

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second} 

# focus the next/previous window in the current desktop
alt + {_,shift + }Tab
	bspc node -f {next,prev}.local.!hidden.window 

# focus the last node/desktop
super + {_,shift + }Tab
	bspc {node,desktop} -f last 

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local 

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \ 
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,alt + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}' 
  bspc node -z {left -30 0 || bspc node -z right -30 0, \
                bottom 0 30 || bspc node -z top 0 30,\
                top 0 -30 || bspc node -z bottom 0 -30,\
                right 30 0 || bspc node -z left 30 0}

# rotate tree
super + shift + {d,a}
    bspc node @/ -C {forward,backward}		

super + shift + m
    bspc node -n last.!automatic

# preselect the ratio
super + ctrl + shift + {1-9}
	bspc node -o 0.{1-9} 

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel 

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel 

#────────────────────────────────────────────────────────────
# APPLICATIONS
#────────────────────────────────────────────────────────────

# terminals
super + {_,shift + ,ctrl + }Return
	{alacritty,st,urxvt}

super + @space
  $HOME/bin/scratch bmpad

# launch rofi (dmenu alternative)
F1
	rofi -show drun -drun-display-format \{name\} -config ~/.config/rofi/config.rasi 

# launch firefox (browser)
super + a
	firefox

# launch firefox (browser)
super + ctrl + Return 
	firefox

#────────────────────────────────────────────────────────────
# SYSTEM
#────────────────────────────────────────────────────────────

# pulseaudio - increase volume
super + F3
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-volume 0 +5%; else pactl set-sink-volume 1 +5%;fi
XF86AudioRaiseVolume 
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-volume 0 +5%; else pactl set-sink-volume 1 +5%;fi

# pulseaudio - increase volume
super + F2
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-volume 0 -5%; else pactl set-sink-volume 1 -5%;fi
XF86AudioLowerVolume 
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-volume 0 -5%; else pactl set-sink-volume 1 -5%;fi
#  pactl set-sink-volume 1 -5% 

# pulseaudio - increase volume
super + F1 
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-mute 0 toggle; else pactl set-sink-mute 0 toggle;fi
XF86AudioMute 
  if [[ $(cat /etc/hostname) == bmTP ]]; then pactl set-sink-mute 0 toggle; else pactl set-sink-mute 0 toggle;fi

  pactl set-sink-mute 0

# printscreen (full)
Print 
  f=/all/bm/images/screenshots/$(date +%Y-%m-%d%H-%m-%s).png; maim -s "$f" && xclip -sel clip -t image/png "$f"
	#maim --format png /dev/stdout | xclip -selection clipboard -t image/png

# printscreen, selection or window
ctrl + Print 
  f=/all/bm/images/screenshots/$(date +%Y-%m-%d%H-%m-%s).png; maim "$f" && xclip -sel clip -t image/png "$f"
#maim -s --format png /dev/stdout | xclip -selection clipboard -t image/png

#────────────────────────────────────────────────────────────
# TEST
#────────────────────────────────────────────────────────────

super + e ; {super + e,e}
    bspc node {@/ --equalize,@parent --balance}

